import{E as y,U as gt,T as _e,a as mt,a4 as I,a5 as D,D as j,x as F,a1 as U,M as k,ad as xt,ae as _t,w as E,X as le,af as bt,ag as V,ah as z,o as $,i as Ge,L as G,P as yt,a7 as We,R as ue,K as He,ai as Tt,S as J,I as w,aj as St,ak as he,Q as de,al as Y,h as be,B as N,v as fe,z as vt,G as wt,am as Ct,an as Bt,p as Le,t as Ie,a8 as De,ab as Oe,ao as Ee,u as Rt,q as Pt,s as Mt,a9 as Ft,aa as Ut,ac as kt,ap as At,aq as zt,n as ye,e as R,ar as Gt}from"./index28393.js";import{c as te,a as Wt,b as Ht,B as Ve}from"./colorToUniform74631.js";import{C as O}from"./CanvasPool74631.js";class $e{static init(e){Object.defineProperty(this,"resizeTo",{set(t){globalThis.removeEventListener("resize",this.queueResize),this._resizeTo=t,t&&(globalThis.addEventListener("resize",this.queueResize),this.resize())},get(){return this._resizeTo}}),this.queueResize=()=>{this._resizeTo&&(this._cancelResize(),this._resizeId=requestAnimationFrame(()=>this.resize()))},this._cancelResize=()=>{this._resizeId&&(cancelAnimationFrame(this._resizeId),this._resizeId=null)},this.resize=()=>{if(!this._resizeTo)return;this._cancelResize();let t,r;if(this._resizeTo===globalThis.window)t=globalThis.innerWidth,r=globalThis.innerHeight;else{const{clientWidth:n,clientHeight:i}=this._resizeTo;t=n,r=i}this.renderer.resize(t,r),this.render()},this._resizeId=null,this._resizeTo=null,this.resizeTo=e.resizeTo||null}static destroy(){globalThis.removeEventListener("resize",this.queueResize),this._cancelResize(),this._cancelResize=null,this.queueResize=null,this.resizeTo=null,this.resize=null}}$e.extension=y.Application;class je{static init(e){e=Object.assign({autoStart:!0,sharedTicker:!1},e),Object.defineProperty(this,"ticker",{set(t){this._ticker&&this._ticker.remove(this.render,this),this._ticker=t,t&&t.add(this.render,this,gt.LOW)},get(){return this._ticker}}),this.stop=()=>{this._ticker.stop()},this.start=()=>{this._ticker.start()},this._ticker=null,this.ticker=e.sharedTicker?_e.shared:new _e,e.autoStart&&this.start()}static destroy(){if(this._ticker){const e=this._ticker;this.ticker=null,e.destroy()}}}je.extension=y.Application;class Lt extends mt{constructor(){super(...arguments),this.chars=Object.create(null),this.lineHeight=0,this.fontFamily="",this.fontMetrics={fontSize:0,ascent:0,descent:0},this.baseLineOffset=0,this.distanceField={type:"none",range:0},this.pages=[],this.applyFillAsTint=!0,this.baseMeasurementFontSize=100,this.baseRenderedFontSize=100}get font(){return I(D,"BitmapFont.font is deprecated, please use BitmapFont.fontFamily instead."),this.fontFamily}get pageTextures(){return I(D,"BitmapFont.pageTextures is deprecated, please use BitmapFont.pages instead."),this.pages}get size(){return I(D,"BitmapFont.size is deprecated, please use BitmapFont.fontMetrics.fontSize instead."),this.fontMetrics.fontSize}get distanceFieldRange(){return I(D,"BitmapFont.distanceFieldRange is deprecated, please use BitmapFont.distanceField.range instead."),this.distanceField.range}get distanceFieldType(){return I(D,"BitmapFont.distanceFieldType is deprecated, please use BitmapFont.distanceField.type instead."),this.distanceField.type}destroy(e=!1){var t;this.emit("destroy",this),this.removeAllListeners();for(const r in this.chars)(t=this.chars[r].texture)==null||t.destroy();this.chars=null,e&&(this.pages.forEach(r=>r.texture.destroy(!0)),this.pages=null)}}const It=["serif","sans-serif","monospace","cursive","fantasy","system-ui"];function Z(a){const e=typeof a.fontSize=="number"?`${a.fontSize}px`:a.fontSize;let t=a.fontFamily;Array.isArray(a.fontFamily)||(t=a.fontFamily.split(","));for(let r=t.length-1;r>=0;r--){let n=t[r].trim();!/([\"\'])[^\'\"]+\1/.test(n)&&!It.includes(n)&&(n=`"${n}"`),t[r]=n}return`${a.fontStyle} ${a.fontVariant} ${a.fontWeight} ${e} ${t.join(",")}`}const ne={willReadFrequently:!0},A=class g{static get experimentalLetterSpacingSupported(){let e=g._experimentalLetterSpacingSupported;if(e!==void 0){const t=j.get().getCanvasRenderingContext2D().prototype;e=g._experimentalLetterSpacingSupported="letterSpacing"in t||"textLetterSpacing"in t}return e}constructor(e,t,r,n,i,s,o,l,d){this.text=e,this.style=t,this.width=r,this.height=n,this.lines=i,this.lineWidths=s,this.lineHeight=o,this.maxLineWidth=l,this.fontProperties=d}static measureText(e=" ",t,r=g._canvas,n=t.wordWrap){var S;const i=`${e}:${t.styleKey}`;if(g._measurementCache[i])return g._measurementCache[i];const s=Z(t),o=g.measureFont(s);o.fontSize===0&&(o.fontSize=t.fontSize,o.ascent=t.fontSize);const l=g.__context;l.font=s;const c=(n?g._wordWrap(e,t,r):e).split(/(?:\r\n|\r|\n)/),u=new Array(c.length);let f=0;for(let b=0;b<c.length;b++){const T=g._measureText(c[b],t.letterSpacing,l);u[b]=T,f=Math.max(f,T)}const m=((S=t._stroke)==null?void 0:S.width)||0;let p=f+m;t.dropShadow&&(p+=t.dropShadow.distance);const h=t.lineHeight||o.fontSize;let _=Math.max(h,o.fontSize+m)+(c.length-1)*(h+t.leading);return t.dropShadow&&(_+=t.dropShadow.distance),new g(e,t,p,_,c,u,h+t.leading,f,o)}static _measureText(e,t,r){let n=!1;g.experimentalLetterSpacingSupported&&(g.experimentalLetterSpacing?(r.letterSpacing=`${t}px`,r.textLetterSpacing=`${t}px`,n=!0):(r.letterSpacing="0px",r.textLetterSpacing="0px"));const i=r.measureText(e);let s=i.width;const o=-i.actualBoundingBoxLeft;let d=i.actualBoundingBoxRight-o;if(s>0)if(n)s-=t,d-=t;else{const c=(g.graphemeSegmenter(e).length-1)*t;s+=c,d+=c}return Math.max(s,d)}static _wordWrap(e,t,r=g._canvas){const n=r.getContext("2d",ne);let i=0,s="",o="";const l=Object.create(null),{letterSpacing:d,whiteSpace:c}=t,u=g._collapseSpaces(c),f=g._collapseNewlines(c);let m=!u;const p=t.wordWrapWidth+d,h=g._tokenize(e);for(let _=0;_<h.length;_++){let x=h[_];if(g._isNewline(x)){if(!f){o+=g._addLine(s),m=!u,s="",i=0;continue}x=" "}if(u){const b=g.isBreakingSpace(x),T=g.isBreakingSpace(s[s.length-1]);if(b&&T)continue}const S=g._getFromCache(x,d,l,n);if(S>p)if(s!==""&&(o+=g._addLine(s),s="",i=0),g.canBreakWords(x,t.breakWords)){const b=g.wordWrapSplit(x);for(let T=0;T<b.length;T++){let C=b[T],B=C,P=1;for(;b[T+P];){const W=b[T+P];if(!g.canBreakChars(B,W,x,T,t.breakWords))C+=W;else break;B=W,P++}T+=P-1;const M=g._getFromCache(C,d,l,n);M+i>p&&(o+=g._addLine(s),m=!1,s="",i=0),s+=C,i+=M}}else{s.length>0&&(o+=g._addLine(s),s="",i=0);const b=_===h.length-1;o+=g._addLine(x,!b),m=!1,s="",i=0}else S+i>p&&(m=!1,o+=g._addLine(s),s="",i=0),(s.length>0||!g.isBreakingSpace(x)||m)&&(s+=x,i+=S)}return o+=g._addLine(s,!1),o}static _addLine(e,t=!0){return e=g._trimRight(e),e=t?`${e}
`:e,e}static _getFromCache(e,t,r,n){let i=r[e];return typeof i!="number"&&(i=g._measureText(e,t,n)+t,r[e]=i),i}static _collapseSpaces(e){return e==="normal"||e==="pre-line"}static _collapseNewlines(e){return e==="normal"}static _trimRight(e){if(typeof e!="string")return"";for(let t=e.length-1;t>=0;t--){const r=e[t];if(!g.isBreakingSpace(r))break;e=e.slice(0,-1)}return e}static _isNewline(e){return typeof e!="string"?!1:g._newlines.includes(e.charCodeAt(0))}static isBreakingSpace(e,t){return typeof e!="string"?!1:g._breakingSpaces.includes(e.charCodeAt(0))}static _tokenize(e){const t=[];let r="";if(typeof e!="string")return t;for(let n=0;n<e.length;n++){const i=e[n],s=e[n+1];if(g.isBreakingSpace(i,s)||g._isNewline(i)){r!==""&&(t.push(r),r=""),t.push(i);continue}r+=i}return r!==""&&t.push(r),t}static canBreakWords(e,t){return t}static canBreakChars(e,t,r,n,i){return!0}static wordWrapSplit(e){return g.graphemeSegmenter(e)}static measureFont(e){if(g._fonts[e])return g._fonts[e];const t=g._context;t.font=e;const r=t.measureText(g.METRICS_STRING+g.BASELINE_SYMBOL),n={ascent:r.actualBoundingBoxAscent,descent:r.actualBoundingBoxDescent,fontSize:r.actualBoundingBoxAscent+r.actualBoundingBoxDescent};return g._fonts[e]=n,n}static clearMetrics(e=""){e?delete g._fonts[e]:g._fonts={}}static get _canvas(){if(!g.__canvas){let e;try{const t=new OffscreenCanvas(0,0),r=t.getContext("2d",ne);if(r!=null&&r.measureText)return g.__canvas=t,t;e=j.get().createCanvas()}catch{e=j.get().createCanvas()}e.width=e.height=10,g.__canvas=e}return g.__canvas}static get _context(){return g.__context||(g.__context=g._canvas.getContext("2d",ne)),g.__context}};A.METRICS_STRING="|ÉqÅ";A.BASELINE_SYMBOL="M";A.BASELINE_MULTIPLIER=1.4;A.HEIGHT_MULTIPLIER=2;A.graphemeSegmenter=(()=>{if(typeof(Intl==null?void 0:Intl.Segmenter)=="function"){const a=new Intl.Segmenter;return e=>[...a.segment(e)].map(t=>t.segment)}return a=>[...a]})();A.experimentalLetterSpacing=!1;A._fonts={};A._newlines=[10,13];A._breakingSpaces=[9,32,8192,8193,8194,8195,8196,8197,8198,8200,8201,8202,8287,12288];A._measurementCache={};let L=A;const Te=1e5;function ee(a,e,t,r=0){if(a.texture===F.WHITE&&!a.fill)return U.shared.setValue(a.color).setAlpha(a.alpha??1).toHexa();if(a.fill){if(a.fill instanceof xt){const n=a.fill,i=e.createPattern(n.texture.source.resource,"repeat"),s=n.transform.copyTo(k.shared);return s.scale(n.texture.frame.width,n.texture.frame.height),i.setTransform(s),i}else if(a.fill instanceof _t){const n=a.fill,i=n.type==="linear",s=n.textureSpace==="local";let o=1,l=1;s&&t&&(o=t.width+r,l=t.height+r);let d,c=!1;if(i){const{start:u,end:f}=n;d=e.createLinearGradient(u.x*o,u.y*l,f.x*o,f.y*l),c=Math.abs(f.x-u.x)<Math.abs((f.y-u.y)*.1)}else{const{center:u,innerRadius:f,outerCenter:m,outerRadius:p}=n;d=e.createRadialGradient(u.x*o,u.y*l,f*o,m.x*o,m.y*l,p*o)}if(c&&s&&t){const u=t.lineHeight/l;for(let f=0;f<t.lines.length;f++){const m=(f*t.lineHeight+r/2)/l;n.colorStops.forEach(p=>{const h=m+p.offset*u;d.addColorStop(Math.floor(h*Te)/Te,U.shared.setValue(p.color).toHex())})}}else n.colorStops.forEach(u=>{d.addColorStop(u.offset,U.shared.setValue(u.color).toHex())});return d}}else{const n=e.createPattern(a.texture.source.resource,"repeat"),i=a.matrix.copyTo(k.shared);return i.scale(a.texture.frame.width,a.texture.frame.height),n.setTransform(i),n}return E("FillStyle not recognised",a),"red"}function Ke(a){if(a==="")return[];typeof a=="string"&&(a=[a]);const e=[];for(let t=0,r=a.length;t<r;t++){const n=a[t];if(Array.isArray(n)){if(n.length!==2)throw new Error(`[BitmapFont]: Invalid character range length, expecting 2 got ${n.length}.`);if(n[0].length===0||n[1].length===0)throw new Error("[BitmapFont]: Invalid character delimiter.");const i=n[0].charCodeAt(0),s=n[1].charCodeAt(0);if(s<i)throw new Error("[BitmapFont]: Invalid character range.");for(let o=i,l=s;o<=l;o++)e.push(String.fromCharCode(o))}else e.push(...Array.from(n))}if(e.length===0)throw new Error("[BitmapFont]: Empty set when resolving characters.");return e}const Ye=class Ne extends Lt{constructor(e){super(),this.resolution=1,this.pages=[],this._padding=0,this._measureCache=Object.create(null),this._currentChars=[],this._currentX=0,this._currentY=0,this._currentPageIndex=-1,this._skipKerning=!1;const t={...Ne.defaultOptions,...e};this._textureSize=t.textureSize,this._mipmap=t.mipmap;const r=t.style.clone();t.overrideFill&&(r._fill.color=16777215,r._fill.alpha=1,r._fill.texture=F.WHITE,r._fill.fill=null),this.applyFillAsTint=t.overrideFill;const n=r.fontSize;r.fontSize=this.baseMeasurementFontSize;const i=Z(r);t.overrideSize?r._stroke&&(r._stroke.width*=this.baseRenderedFontSize/n):r.fontSize=this.baseRenderedFontSize=n,this._style=r,this._skipKerning=t.skipKerning??!1,this.resolution=t.resolution??1,this._padding=t.padding??4,this.fontMetrics=L.measureFont(i),this.lineHeight=r.lineHeight||this.fontMetrics.fontSize||r.fontSize}ensureCharacters(e){var _,x;const t=Ke(e).filter(S=>!this._currentChars.includes(S)).filter((S,b,T)=>T.indexOf(S)===b);if(!t.length)return;this._currentChars=[...this._currentChars,...t];let r;this._currentPageIndex===-1?r=this._nextPage():r=this.pages[this._currentPageIndex];let{canvas:n,context:i}=r.canvasAndContext,s=r.texture.source;const o=this._style;let l=this._currentX,d=this._currentY;const c=this.baseRenderedFontSize/this.baseMeasurementFontSize,u=this._padding*c;let f=0,m=!1;const p=n.width/this.resolution,h=n.height/this.resolution;for(let S=0;S<t.length;S++){const b=t[S],T=L.measureText(b,o,n,!1);T.lineHeight=T.height;const C=T.width*c,B=Math.ceil((o.fontStyle==="italic"?2:1)*C),P=T.height*c,M=B+u*2,W=P+u*2;if(m=!1,b!==`
`&&b!=="\r"&&b!=="	"&&b!==" "&&(m=!0,f=Math.ceil(Math.max(W,f))),l+M>p&&(d+=f,f=W,l=0,d+f>h)){s.update();const H=this._nextPage();n=H.canvasAndContext.canvas,i=H.canvasAndContext.context,s=H.texture.source,d=0}const K=C/c-(((_=o.dropShadow)==null?void 0:_.distance)??0)-(((x=o._stroke)==null?void 0:x.width)??0);if(this.chars[b]={id:b.codePointAt(0),xOffset:-this._padding,yOffset:-this._padding,xAdvance:K,kerning:{}},m){this._drawGlyph(i,T,l+u,d+u,c,o);const H=s.width*c,v=s.height*c,re=new le(l/H*s.width,d/v*s.height,M/H*s.width,W/v*s.height);this.chars[b].texture=new F({source:s,frame:re}),l+=Math.ceil(M)}}s.update(),this._currentX=l,this._currentY=d,this._skipKerning&&this._applyKerning(t,i)}get pageTextures(){return I(D,"BitmapFont.pageTextures is deprecated, please use BitmapFont.pages instead."),this.pages}_applyKerning(e,t){const r=this._measureCache;for(let n=0;n<e.length;n++){const i=e[n];for(let s=0;s<this._currentChars.length;s++){const o=this._currentChars[s];let l=r[i];l||(l=r[i]=t.measureText(i).width);let d=r[o];d||(d=r[o]=t.measureText(o).width);let c=t.measureText(i+o).width,u=c-(l+d);u&&(this.chars[i].kerning[o]=u),c=t.measureText(i+o).width,u=c-(l+d),u&&(this.chars[o].kerning[i]=u)}}}_nextPage(){this._currentPageIndex++;const e=this.resolution,t=O.getOptimalCanvasAndContext(this._textureSize,this._textureSize,e);this._setupContext(t.context,this._style,e);const r=e*(this.baseRenderedFontSize/this.baseMeasurementFontSize),n=new F({source:new bt({resource:t.canvas,resolution:r,alphaMode:"premultiply-alpha-on-upload",autoGenerateMipmaps:this._mipmap})}),i={canvasAndContext:t,texture:n};return this.pages[this._currentPageIndex]=i,i}_setupContext(e,t,r){t.fontSize=this.baseRenderedFontSize,e.scale(r,r),e.font=Z(t),t.fontSize=this.baseMeasurementFontSize,e.textBaseline=t.textBaseline;const n=t._stroke,i=(n==null?void 0:n.width)??0;if(n&&(e.lineWidth=i,e.lineJoin=n.join,e.miterLimit=n.miterLimit,e.strokeStyle=ee(n,e)),t._fill&&(e.fillStyle=ee(t._fill,e)),t.dropShadow){const s=t.dropShadow,o=U.shared.setValue(s.color).toArray(),l=s.blur*r,d=s.distance*r;e.shadowColor=`rgba(${o[0]*255},${o[1]*255},${o[2]*255},${s.alpha})`,e.shadowBlur=l,e.shadowOffsetX=Math.cos(s.angle)*d,e.shadowOffsetY=Math.sin(s.angle)*d}else e.shadowColor="black",e.shadowBlur=0,e.shadowOffsetX=0,e.shadowOffsetY=0}_drawGlyph(e,t,r,n,i,s){const o=t.text,l=t.fontProperties,d=s._stroke,c=((d==null?void 0:d.width)??0)*i,u=r+c/2,f=n-c/2,m=l.descent*i,p=t.lineHeight*i;s.stroke&&c&&e.strokeText(o,u,f+p-m),s._fill&&e.fillText(o,u,f+p-m)}destroy(){super.destroy();for(let e=0;e<this.pages.length;e++){const{canvasAndContext:t,texture:r}=this.pages[e];O.returnCanvasAndContext(t),r.destroy(!0)}this.pages=null}};Ye.defaultOptions={textureSize:512,style:new V,mipmap:!0};let Se=Ye;function Xe(a,e,t,r){const n={width:0,height:0,offsetY:0,scale:e.fontSize/t.baseMeasurementFontSize,lines:[{width:0,charPositions:[],spaceWidth:0,spacesIndex:[],chars:[]}]};n.offsetY=t.baseLineOffset;let i=n.lines[0],s=null,o=!0;const l={width:0,start:0,index:0,positions:[],chars:[]},d=p=>{const h=i.width;for(let _=0;_<l.index;_++){const x=p.positions[_];i.chars.push(p.chars[_]),i.charPositions.push(x+h)}i.width+=p.width,o=!1,l.width=0,l.index=0,l.chars.length=0},c=()=>{let p=i.chars.length-1;if(r){let h=i.chars[p];for(;h===" ";)i.width-=t.chars[h].xAdvance,h=i.chars[--p]}n.width=Math.max(n.width,i.width),i={width:0,charPositions:[],chars:[],spaceWidth:0,spacesIndex:[]},o=!0,n.lines.push(i),n.height+=t.lineHeight},u=t.baseMeasurementFontSize/e.fontSize,f=e.letterSpacing*u,m=e.wordWrapWidth*u;for(let p=0;p<a.length+1;p++){let h;const _=p===a.length;_||(h=a[p]);const x=t.chars[h]||t.chars[" "];if(/(?:\s)/.test(h)||h==="\r"||h===`
`||_){if(!o&&e.wordWrap&&i.width+l.width-f>m?(c(),d(l),_||i.charPositions.push(0)):(l.start=i.width,d(l),_||i.charPositions.push(0)),h==="\r"||h===`
`)i.width!==0&&c();else if(!_){const C=x.xAdvance+(x.kerning[s]||0)+f;i.width+=C,i.spaceWidth=C,i.spacesIndex.push(i.charPositions.length),i.chars.push(h)}}else{const T=x.kerning[s]||0,C=x.xAdvance+T+f;l.positions[l.index++]=l.width+T,l.chars.push(h),l.width+=C}s=h}return c(),e.align==="center"?Dt(n):e.align==="right"?Ot(n):e.align==="justify"&&Et(n),n}function Dt(a){for(let e=0;e<a.lines.length;e++){const t=a.lines[e],r=a.width/2-t.width/2;for(let n=0;n<t.charPositions.length;n++)t.charPositions[n]+=r}}function Ot(a){for(let e=0;e<a.lines.length;e++){const t=a.lines[e],r=a.width-t.width;for(let n=0;n<t.charPositions.length;n++)t.charPositions[n]+=r}}function Et(a){const e=a.width;for(let t=0;t<a.lines.length;t++){const r=a.lines[t];let n=0,i=r.spacesIndex[n++],s=0;const o=r.spacesIndex.length,d=(e-r.width)/o;for(let c=0;c<r.charPositions.length;c++)c===i&&(i=r.spacesIndex[n++],s+=d),r.charPositions[c]+=s}}let X=0;class Vt{constructor(){this.ALPHA=[["a","z"],["A","Z"]," "],this.NUMERIC=[["0","9"]],this.ALPHANUMERIC=[["a","z"],["A","Z"],["0","9"]," "],this.ASCII=[[" ","~"]],this.defaultOptions={chars:this.ALPHANUMERIC,resolution:1,padding:4,skipKerning:!1}}getFont(e,t){var s;let r=`${t.fontFamily}-bitmap`,n=!0;if(t._fill.fill&&!t._stroke)r+=t._fill.fill.styleKey,n=!1;else if(t._stroke||t.dropShadow){let o=t.styleKey;o=o.substring(0,o.lastIndexOf("-")),r=`${o}-bitmap`,n=!1}if(!z.has(r)){const o=new Se({style:t,overrideFill:n,overrideSize:!0,...this.defaultOptions});X++,X>50&&E("BitmapText",`You have dynamically created ${X} bitmap fonts, this can be inefficient. Try pre installing your font styles using \`BitmapFont.install({name:"style1", style})\``),o.once("destroy",()=>{X--,z.remove(r)}),z.set(r,o)}const i=z.get(r);return(s=i.ensureCharacters)==null||s.call(i,e),i}getLayout(e,t,r=!0){const n=this.getFont(e,t);return Xe([...e],t,n,r)}measureText(e,t,r=!0){return this.getLayout(e,t,r)}install(...e){var d,c,u,f;let t=e[0];typeof t=="string"&&(t={name:t,style:e[1],chars:(d=e[2])==null?void 0:d.chars,resolution:(c=e[2])==null?void 0:c.resolution,padding:(u=e[2])==null?void 0:u.padding,skipKerning:(f=e[2])==null?void 0:f.skipKerning},I(D,"BitmapFontManager.install(name, style, options) is deprecated, use BitmapFontManager.install({name, style, ...options})"));const r=t==null?void 0:t.name;if(!r)throw new Error("[BitmapFontManager] Property `name` is required.");t={...this.defaultOptions,...t};const n=t.style,i=n instanceof V?n:new V(n),s=i._fill.fill!==null&&i._fill.fill!==void 0,o=new Se({style:i,overrideFill:s,skipKerning:t.skipKerning,padding:t.padding,resolution:t.resolution,overrideSize:!1}),l=Ke(t.chars);return o.ensureCharacters(l.join("")),z.set(`${r}-bitmap`,o),o.once("destroy",()=>z.remove(`${r}-bitmap`)),o}uninstall(e){const t=`${e}-bitmap`,r=z.get(t);r&&r.destroy()}}const $t=new Vt;class qe{constructor(e){this._renderer=e}push(e,t,r){this._renderer.renderPipes.batch.break(r),r.add({renderPipeId:"filter",canBundle:!1,action:"pushFilter",container:t,filterEffect:e})}pop(e,t,r){this._renderer.renderPipes.batch.break(r),r.add({renderPipeId:"filter",action:"popFilter",canBundle:!1})}execute(e){e.action==="pushFilter"?this._renderer.filter.push(e):e.action==="popFilter"&&this._renderer.filter.pop()}destroy(){this._renderer=null}}qe.extension={type:[y.WebGLPipes,y.WebGPUPipes,y.CanvasPipes],name:"filter"};function jt(a,e){e.clear();const t=e.matrix;for(let r=0;r<a.length;r++){const n=a[r];n.globalDisplayStatus<7||(e.matrix=n.worldTransform,e.addBounds(n.bounds))}return e.matrix=t,e}const Kt=new We({attributes:{aPosition:{buffer:new Float32Array([0,0,1,0,1,1,0,1]),format:"float32x2",stride:2*4,offset:0}},indexBuffer:new Uint32Array([0,1,2,0,2,3])});class Qe{constructor(e){this._filterStackIndex=0,this._filterStack=[],this._filterGlobalUniforms=new $({uInputSize:{value:new Float32Array(4),type:"vec4<f32>"},uInputPixel:{value:new Float32Array(4),type:"vec4<f32>"},uInputClamp:{value:new Float32Array(4),type:"vec4<f32>"},uOutputFrame:{value:new Float32Array(4),type:"vec4<f32>"},uGlobalFrame:{value:new Float32Array(4),type:"vec4<f32>"},uOutputTexture:{value:new Float32Array(4),type:"vec4<f32>"}}),this._globalFilterBindGroup=new Ge({}),this.renderer=e}get activeBackTexture(){var e;return(e=this._activeFilterData)==null?void 0:e.backTexture}push(e){var m;const t=this.renderer,r=e.filterEffect.filters;this._filterStack[this._filterStackIndex]||(this._filterStack[this._filterStackIndex]=this._getFilterData());const n=this._filterStack[this._filterStackIndex];if(this._filterStackIndex++,r.length===0){n.skip=!0;return}const i=n.bounds;if(e.renderables?jt(e.renderables,i):e.filterEffect.filterArea?(i.clear(),i.addRect(e.filterEffect.filterArea),i.applyMatrix(e.container.worldTransform)):e.container.getFastGlobalBounds(!0,i),e.container){const h=(e.container.renderGroup||e.container.parentRenderGroup).cacheToLocalTransform;h&&i.applyMatrix(h)}const s=t.renderTarget.renderTarget.colorTexture.source;let o=1/0,l=0,d=!0,c=!1,u=!1,f=!0;for(let p=0;p<r.length;p++){const h=r[p];if(o=Math.min(o,h.resolution==="inherit"?s._resolution:h.resolution),l+=h.padding,h.antialias==="off"?d=!1:h.antialias==="inherit"&&d&&(d=s.antialias),h.clipToViewport||(f=!1),!!!(h.compatibleRenderers&t.type)){u=!1;break}if(h.blendRequired&&!(((m=t.backBuffer)==null?void 0:m.useBackBuffer)??!0)){E("Blend filter requires backBuffer on WebGL renderer to be enabled. Set `useBackBuffer: true` in the renderer options."),u=!1;break}u=h.enabled||u,c||(c=h.blendRequired)}if(!u){n.skip=!0;return}if(f){const p=t.renderTarget.rootViewPort,h=t.renderTarget.renderTarget.resolution;i.fitBounds(0,p.width/h,0,p.height/h)}if(i.scale(o).ceil().scale(1/o).pad(l|0),!i.isPositive){n.skip=!0;return}n.skip=!1,n.bounds=i,n.blendRequired=c,n.container=e.container,n.filterEffect=e.filterEffect,n.previousRenderSurface=t.renderTarget.renderSurface,n.inputTexture=G.getOptimalTexture(i.width,i.height,o,d),t.renderTarget.bind(n.inputTexture,!0),t.globalUniforms.push({offset:i})}pop(){const e=this.renderer;this._filterStackIndex--;const t=this._filterStack[this._filterStackIndex];if(t.skip)return;this._activeFilterData=t;const r=t.inputTexture,n=t.bounds;let i=F.EMPTY;if(e.renderTarget.finishRenderPass(),t.blendRequired){const o=this._filterStackIndex>0?this._filterStack[this._filterStackIndex-1].bounds:null,l=e.renderTarget.getRenderTarget(t.previousRenderSurface);i=this.getBackTexture(l,n,o)}t.backTexture=i;const s=t.filterEffect.filters;if(this._globalFilterBindGroup.setResource(r.source.style,2),this._globalFilterBindGroup.setResource(i.source,3),e.globalUniforms.pop(),s.length===1)s[0].apply(this,r,t.previousRenderSurface,!1),G.returnTexture(r);else{let o=t.inputTexture,l=G.getOptimalTexture(n.width,n.height,o.source._resolution,!1),d=0;for(d=0;d<s.length-1;++d){s[d].apply(this,o,l,!0);const u=o;o=l,l=u}s[d].apply(this,o,t.previousRenderSurface,!1),G.returnTexture(o),G.returnTexture(l)}t.blendRequired&&G.returnTexture(i)}getBackTexture(e,t,r){const n=e.colorTexture.source._resolution,i=G.getOptimalTexture(t.width,t.height,n,!1);let s=t.minX,o=t.minY;r&&(s-=r.minX,o-=r.minY),s=Math.floor(s*n),o=Math.floor(o*n);const l=Math.ceil(t.width*n),d=Math.ceil(t.height*n);return this.renderer.renderTarget.copyToTexture(e,i,{x:s,y:o},{width:l,height:d},{x:0,y:0}),i}applyFilter(e,t,r,n){const i=this.renderer,s=this._filterStack[this._filterStackIndex],o=s.bounds,l=yt.shared,c=s.previousRenderSurface===r;let u=this.renderer.renderTarget.rootRenderTarget.colorTexture.source._resolution,f=this._filterStackIndex-1;for(;f>0&&this._filterStack[f].skip;)--f;f>0&&(u=this._filterStack[f].inputTexture.source._resolution);const m=this._filterGlobalUniforms,p=m.uniforms,h=p.uOutputFrame,_=p.uInputSize,x=p.uInputPixel,S=p.uInputClamp,b=p.uGlobalFrame,T=p.uOutputTexture;if(c){let P=this._filterStackIndex;for(;P>0;){P--;const M=this._filterStack[this._filterStackIndex-1];if(!M.skip){l.x=M.bounds.minX,l.y=M.bounds.minY;break}}h[0]=o.minX-l.x,h[1]=o.minY-l.y}else h[0]=0,h[1]=0;h[2]=t.frame.width,h[3]=t.frame.height,_[0]=t.source.width,_[1]=t.source.height,_[2]=1/_[0],_[3]=1/_[1],x[0]=t.source.pixelWidth,x[1]=t.source.pixelHeight,x[2]=1/x[0],x[3]=1/x[1],S[0]=.5*x[2],S[1]=.5*x[3],S[2]=t.frame.width*_[2]-.5*x[2],S[3]=t.frame.height*_[3]-.5*x[3];const C=this.renderer.renderTarget.rootRenderTarget.colorTexture;b[0]=l.x*u,b[1]=l.y*u,b[2]=C.source.width*u,b[3]=C.source.height*u;const B=this.renderer.renderTarget.getRenderTarget(r);if(i.renderTarget.bind(r,!!n),r instanceof F?(T[0]=r.frame.width,T[1]=r.frame.height):(T[0]=B.width,T[1]=B.height),T[2]=B.isRoot?-1:1,m.update(),i.renderPipes.uniformBatch){const P=i.renderPipes.uniformBatch.getUboResource(m);this._globalFilterBindGroup.setResource(P,0)}else this._globalFilterBindGroup.setResource(m,0);this._globalFilterBindGroup.setResource(t.source,1),this._globalFilterBindGroup.setResource(t.source.style,2),e.groups[0]=this._globalFilterBindGroup,i.encoder.draw({geometry:Kt,shader:e,state:e._state,topology:"triangle-list"}),i.type===ue.WEBGL&&i.renderTarget.finishRenderPass()}_getFilterData(){return{skip:!1,inputTexture:null,bounds:new He,container:null,filterEffect:null,blendRequired:!1,previousRenderSurface:null}}calculateSpriteMatrix(e,t){const r=this._activeFilterData,n=e.set(r.inputTexture._source.width,0,0,r.inputTexture._source.height,r.bounds.minX,r.bounds.minY),i=t.worldTransform.copyTo(k.shared),s=t.renderGroup||t.parentRenderGroup;return s&&s.cacheToLocalTransform&&i.prepend(s.cacheToLocalTransform),i.invert(),n.prepend(i),n.scale(1/t.texture.frame.width,1/t.texture.frame.height),n.translate(t.anchor.x,t.anchor.y),n}}Qe.extension={type:[y.WebGLSystem,y.WebGPUSystem],name:"filter"};function Yt(a){const e=a._stroke,t=a._fill,n=[`div { ${[`color: ${U.shared.setValue(t.color).toHex()}`,`font-size: ${a.fontSize}px`,`font-family: ${a.fontFamily}`,`font-weight: ${a.fontWeight}`,`font-style: ${a.fontStyle}`,`font-variant: ${a.fontVariant}`,`letter-spacing: ${a.letterSpacing}px`,`text-align: ${a.align}`,`padding: ${a.padding}px`,`white-space: ${a.whiteSpace==="pre"&&a.wordWrap?"pre-wrap":a.whiteSpace}`,...a.lineHeight?[`line-height: ${a.lineHeight}px`]:[],...a.wordWrap?[`word-wrap: ${a.breakWords?"break-all":"break-word"}`,`max-width: ${a.wordWrapWidth}px`]:[],...e?[Ze(e)]:[],...a.dropShadow?[Je(a.dropShadow)]:[],...a.cssOverrides].join(";")} }`];return Nt(a.tagStyles,n),n.join(" ")}function Je(a){const e=U.shared.setValue(a.color).setAlpha(a.alpha).toHexa(),t=Math.round(Math.cos(a.angle)*a.distance),r=Math.round(Math.sin(a.angle)*a.distance),n=`${t}px ${r}px`;return a.blur>0?`text-shadow: ${n} ${a.blur}px ${e}`:`text-shadow: ${n} ${e}`}function Ze(a){return[`-webkit-text-stroke-width: ${a.width}px`,`-webkit-text-stroke-color: ${U.shared.setValue(a.color).toHex()}`,`text-stroke-width: ${a.width}px`,`text-stroke-color: ${U.shared.setValue(a.color).toHex()}`,"paint-order: stroke"].join(";")}const ve={fontSize:"font-size: {{VALUE}}px",fontFamily:"font-family: {{VALUE}}",fontWeight:"font-weight: {{VALUE}}",fontStyle:"font-style: {{VALUE}}",fontVariant:"font-variant: {{VALUE}}",letterSpacing:"letter-spacing: {{VALUE}}px",align:"text-align: {{VALUE}}",padding:"padding: {{VALUE}}px",whiteSpace:"white-space: {{VALUE}}",lineHeight:"line-height: {{VALUE}}px",wordWrapWidth:"max-width: {{VALUE}}px"},we={fill:a=>`color: ${U.shared.setValue(a).toHex()}`,breakWords:a=>`word-wrap: ${a?"break-all":"break-word"}`,stroke:Ze,dropShadow:Je};function Nt(a,e){for(const t in a){const r=a[t],n=[];for(const i in r)we[i]?n.push(we[i](r[i])):ve[i]&&n.push(ve[i].replace("{{VALUE}}",r[i]));e.push(`${t} { ${n.join(";")} }`)}}class pe extends V{constructor(e={}){super(e),this._cssOverrides=[],this.cssOverrides??(this.cssOverrides=e.cssOverrides),this.tagStyles=e.tagStyles??{}}set cssOverrides(e){this._cssOverrides=e instanceof Array?e:[e],this.update()}get cssOverrides(){return this._cssOverrides}_generateKey(){return this._styleKey=Tt(this)+this._cssOverrides.join("-"),this._styleKey}update(){this._cssStyle=null,super.update()}clone(){return new pe({align:this.align,breakWords:this.breakWords,dropShadow:this.dropShadow?{...this.dropShadow}:null,fill:this._fill,fontFamily:this.fontFamily,fontSize:this.fontSize,fontStyle:this.fontStyle,fontVariant:this.fontVariant,fontWeight:this.fontWeight,letterSpacing:this.letterSpacing,lineHeight:this.lineHeight,padding:this.padding,stroke:this._stroke,whiteSpace:this.whiteSpace,wordWrap:this.wordWrap,wordWrapWidth:this.wordWrapWidth,cssOverrides:this.cssOverrides})}get cssStyle(){return this._cssStyle||(this._cssStyle=Yt(this)),this._cssStyle}addOverride(...e){const t=e.filter(r=>!this.cssOverrides.includes(r));t.length>0&&(this.cssOverrides.push(...t),this.update())}removeOverride(...e){const t=e.filter(r=>this.cssOverrides.includes(r));t.length>0&&(this.cssOverrides=this.cssOverrides.filter(r=>!t.includes(r)),this.update())}set fill(e){typeof e!="string"&&typeof e!="number"&&E("[HTMLTextStyle] only color fill is not supported by HTMLText"),super.fill=e}set stroke(e){e&&typeof e!="string"&&typeof e!="number"&&E("[HTMLTextStyle] only color stroke is not supported by HTMLText"),super.stroke=e}}const Ce="http://www.w3.org/2000/svg",Be="http://www.w3.org/1999/xhtml";class et{constructor(){this.svgRoot=document.createElementNS(Ce,"svg"),this.foreignObject=document.createElementNS(Ce,"foreignObject"),this.domElement=document.createElementNS(Be,"div"),this.styleElement=document.createElementNS(Be,"style"),this.image=new Image;const{foreignObject:e,svgRoot:t,styleElement:r,domElement:n}=this;e.setAttribute("width","10000"),e.setAttribute("height","10000"),e.style.overflow="hidden",t.appendChild(e),e.appendChild(r),e.appendChild(n)}}let Re;function Xt(a,e,t,r){r||(r=Re||(Re=new et));const{domElement:n,styleElement:i,svgRoot:s}=r;n.innerHTML=`<style>${e.cssStyle};</style><div style='padding:0'>${a}</div>`,n.setAttribute("style","transform-origin: top left; display: inline-block"),t&&(i.textContent=t),document.body.appendChild(s);const o=n.getBoundingClientRect();s.remove();const l=e.padding*2;return{width:o.width-l,height:o.height-l}}class tt{constructor(e,t){this.state=J.for2d(),this._graphicsBatchesHash=Object.create(null),this._destroyRenderableBound=this.destroyRenderable.bind(this),this.renderer=e,this._adaptor=t,this._adaptor.init(),this.renderer.renderableGC.addManagedHash(this,"_graphicsBatchesHash")}validateRenderable(e){const t=e.context,r=!!this._graphicsBatchesHash[e.uid],n=this.renderer.graphicsContext.updateGpuContext(t);return!!(n.isBatchable||r!==n.isBatchable)}addRenderable(e,t){const r=this.renderer.graphicsContext.updateGpuContext(e.context);e.didViewUpdate&&this._rebuild(e),r.isBatchable?this._addToBatcher(e,t):(this.renderer.renderPipes.batch.break(t),t.add(e))}updateRenderable(e){const t=this._graphicsBatchesHash[e.uid];if(t)for(let r=0;r<t.length;r++){const n=t[r];n._batcher.updateElement(n)}}destroyRenderable(e){this._graphicsBatchesHash[e.uid]&&this._removeBatchForRenderable(e.uid),e.off("destroyed",this._destroyRenderableBound)}execute(e){if(!e.isRenderable)return;const t=this.renderer,r=e.context;if(!t.graphicsContext.getGpuContext(r).batches.length)return;const i=r.customShader||this._adaptor.shader;this.state.blendMode=e.groupBlendMode;const s=i.resources.localUniforms.uniforms;s.uTransformMatrix=e.groupTransform,s.uRound=t._roundPixels|e._roundPixels,te(e.groupColorAlpha,s.uColor,0),this._adaptor.execute(this,e)}_rebuild(e){const t=!!this._graphicsBatchesHash[e.uid],r=this.renderer.graphicsContext.updateGpuContext(e.context);t&&this._removeBatchForRenderable(e.uid),r.isBatchable&&this._initBatchesForRenderable(e),e.batched=r.isBatchable}_addToBatcher(e,t){const r=this.renderer.renderPipes.batch,n=this._getBatchesForRenderable(e);for(let i=0;i<n.length;i++){const s=n[i];r.addToBatch(s,t)}}_getBatchesForRenderable(e){return this._graphicsBatchesHash[e.uid]||this._initBatchesForRenderable(e)}_initBatchesForRenderable(e){const t=e.context,r=this.renderer.graphicsContext.getGpuContext(t),n=this.renderer._roundPixels|e._roundPixels,i=r.batches.map(s=>{const o=w.get(St);return s.copyTo(o),o.renderable=e,o.roundPixels=n,o});return this._graphicsBatchesHash[e.uid]===void 0&&e.on("destroyed",this._destroyRenderableBound),this._graphicsBatchesHash[e.uid]=i,i}_removeBatchForRenderable(e){this._graphicsBatchesHash[e].forEach(t=>{w.return(t)}),this._graphicsBatchesHash[e]=null}destroy(){this.renderer=null,this._adaptor.destroy(),this._adaptor=null,this.state=null;for(const e in this._graphicsBatchesHash)this._removeBatchForRenderable(e);this._graphicsBatchesHash=null}}tt.extension={type:[y.WebGLPipes,y.WebGPUPipes,y.CanvasPipes],name:"graphics"};class ge{constructor(){this.batcherName="default",this.packAsQuad=!1,this.indexOffset=0,this.attributeOffset=0,this.roundPixels=0,this._batcher=null,this._batch=null,this._textureMatrixUpdateId=-1,this._uvUpdateId=-1}get blendMode(){return this.renderable.groupBlendMode}get topology(){return this._topology||this.geometry.topology}set topology(e){this._topology=e}reset(){this.renderable=null,this.texture=null,this._batcher=null,this._batch=null,this.geometry=null,this._uvUpdateId=-1,this._textureMatrixUpdateId=-1}setTexture(e){this.texture!==e&&(this.texture=e,this._textureMatrixUpdateId=-1)}get uvs(){const t=this.geometry.getBuffer("aUV"),r=t.data;let n=r;const i=this.texture.textureMatrix;return i.isSimple||(n=this._transformedUvs,(this._textureMatrixUpdateId!==i._updateID||this._uvUpdateId!==t._updateID)&&((!n||n.length<r.length)&&(n=this._transformedUvs=new Float32Array(r.length)),this._textureMatrixUpdateId=i._updateID,this._uvUpdateId=t._updateID,i.multiplyUvs(r,n))),n}get positions(){return this.geometry.positions}get indices(){return this.geometry.indices}get color(){return this.renderable.groupColorAlpha}get groupTransform(){return this.renderable.groupTransform}get attributeSize(){return this.geometry.positions.length/2}get indexSize(){return this.geometry.indices.length}}class rt{constructor(e,t){this.localUniforms=new $({uTransformMatrix:{value:new k,type:"mat3x3<f32>"},uColor:{value:new Float32Array([1,1,1,1]),type:"vec4<f32>"},uRound:{value:0,type:"f32"}}),this.localUniformsBindGroup=new Ge({0:this.localUniforms}),this._meshDataHash=Object.create(null),this._gpuBatchableMeshHash=Object.create(null),this._destroyRenderableBound=this.destroyRenderable.bind(this),this.renderer=e,this._adaptor=t,this._adaptor.init(),e.renderableGC.addManagedHash(this,"_gpuBatchableMeshHash"),e.renderableGC.addManagedHash(this,"_meshDataHash")}validateRenderable(e){const t=this._getMeshData(e),r=t.batched,n=e.batched;if(t.batched=n,r!==n)return!0;if(n){const i=e._geometry;if(i.indices.length!==t.indexSize||i.positions.length!==t.vertexSize)return t.indexSize=i.indices.length,t.vertexSize=i.positions.length,!0;const s=this._getBatchableMesh(e);return s.texture.uid!==e._texture.uid&&(s._textureMatrixUpdateId=-1),!s._batcher.checkAndUpdateTexture(s,e._texture)}return!1}addRenderable(e,t){const r=this.renderer.renderPipes.batch,{batched:n}=this._getMeshData(e);if(n){const i=this._getBatchableMesh(e);i.setTexture(e._texture),i.geometry=e._geometry,r.addToBatch(i,t)}else r.break(t),t.add(e)}updateRenderable(e){if(e.batched){const t=this._gpuBatchableMeshHash[e.uid];t.setTexture(e._texture),t.geometry=e._geometry,t._batcher.updateElement(t)}}destroyRenderable(e){this._meshDataHash[e.uid]=null;const t=this._gpuBatchableMeshHash[e.uid];t&&(w.return(t),this._gpuBatchableMeshHash[e.uid]=null),e.off("destroyed",this._destroyRenderableBound)}execute(e){if(!e.isRenderable)return;e.state.blendMode=he(e.groupBlendMode,e.texture._source);const t=this.localUniforms;t.uniforms.uTransformMatrix=e.groupTransform,t.uniforms.uRound=this.renderer._roundPixels|e._roundPixels,t.update(),te(e.groupColorAlpha,t.uniforms.uColor,0),this._adaptor.execute(this,e)}_getMeshData(e){return this._meshDataHash[e.uid]||this._initMeshData(e)}_initMeshData(e){var t,r;return this._meshDataHash[e.uid]={batched:e.batched,indexSize:(t=e._geometry.indices)==null?void 0:t.length,vertexSize:(r=e._geometry.positions)==null?void 0:r.length},e.on("destroyed",this._destroyRenderableBound),this._meshDataHash[e.uid]}_getBatchableMesh(e){return this._gpuBatchableMeshHash[e.uid]||this._initBatchableMesh(e)}_initBatchableMesh(e){const t=w.get(ge);return t.renderable=e,t.setTexture(e._texture),t.transform=e.groupTransform,t.roundPixels=this.renderer._roundPixels|e._roundPixels,this._gpuBatchableMeshHash[e.uid]=t,t}destroy(){for(const e in this._gpuBatchableMeshHash)this._gpuBatchableMeshHash[e]&&w.return(this._gpuBatchableMeshHash[e]);this._gpuBatchableMeshHash=null,this._meshDataHash=null,this.localUniforms=null,this.localUniformsBindGroup=null,this._adaptor.destroy(),this._adaptor=null,this.renderer=null}}rt.extension={type:[y.WebGLPipes,y.WebGPUPipes,y.CanvasPipes],name:"mesh"};class qt{execute(e,t){const r=e.state,n=e.renderer,i=t.shader||e.defaultShader;i.resources.uTexture=t.texture._source,i.resources.uniforms=e.localUniforms;const s=n.gl,o=e.getBuffers(t);n.shader.bind(i),n.state.set(r),n.geometry.bind(o.geometry,i.glProgram);const d=o.geometry.indexBuffer.data.BYTES_PER_ELEMENT===2?s.UNSIGNED_SHORT:s.UNSIGNED_INT;s.drawElements(s.TRIANGLES,t.particleChildren.length*6,d,0)}}class Qt{execute(e,t){const r=e.renderer,n=t.shader||e.defaultShader;n.groups[0]=r.renderPipes.uniformBatch.getUniformBindGroup(e.localUniforms,!0),n.groups[1]=r.texture.getTextureBindGroup(t.texture);const i=e.state,s=e.getBuffers(t);r.encoder.draw({geometry:s.geometry,shader:t.shader||e.defaultShader,state:i,size:t.particleChildren.length*6})}}function Pe(a,e=null){const t=a*6;if(t>65535?e||(e=new Uint32Array(t)):e||(e=new Uint16Array(t)),e.length!==t)throw new Error(`Out buffer length is incorrect, got ${e.length} and expected ${t}`);for(let r=0,n=0;r<t;r+=6,n+=4)e[r+0]=n+0,e[r+1]=n+1,e[r+2]=n+2,e[r+3]=n+0,e[r+4]=n+2,e[r+5]=n+3;return e}function Jt(a){return{dynamicUpdate:Me(a,!0),staticUpdate:Me(a,!1)}}function Me(a,e){const t=[];t.push(`
      
        var index = 0;

        for (let i = 0; i < ps.length; ++i)
        {
            const p = ps[i];

            `);let r=0;for(const i in a){const s=a[i];if(e!==s.dynamic)continue;t.push(`offset = index + ${r}`),t.push(s.code);const o=de(s.format);r+=o.stride/4}t.push(`
            index += stride * 4;
        }
    `),t.unshift(`
        var stride = ${r};
    `);const n=t.join(`
`);return new Function("ps","f32v","u32v",n)}class Zt{constructor(e){this._size=0,this._generateParticleUpdateCache={};const t=this._size=e.size??1e3,r=e.properties;let n=0,i=0;for(const c in r){const u=r[c],f=de(u.format);u.dynamic?i+=f.stride:n+=f.stride}this._dynamicStride=i/4,this._staticStride=n/4,this.staticAttributeBuffer=new Y(t*4*n),this.dynamicAttributeBuffer=new Y(t*4*i),this.indexBuffer=Pe(t);const s=new We;let o=0,l=0;this._staticBuffer=new be({data:new Float32Array(1),label:"static-particle-buffer",shrinkToFit:!1,usage:N.VERTEX|N.COPY_DST}),this._dynamicBuffer=new be({data:new Float32Array(1),label:"dynamic-particle-buffer",shrinkToFit:!1,usage:N.VERTEX|N.COPY_DST});for(const c in r){const u=r[c],f=de(u.format);u.dynamic?(s.addAttribute(u.attributeName,{buffer:this._dynamicBuffer,stride:this._dynamicStride*4,offset:o*4,format:u.format}),o+=f.size):(s.addAttribute(u.attributeName,{buffer:this._staticBuffer,stride:this._staticStride*4,offset:l*4,format:u.format}),l+=f.size)}s.addIndex(this.indexBuffer);const d=this.getParticleUpdate(r);this._dynamicUpload=d.dynamicUpdate,this._staticUpload=d.staticUpdate,this.geometry=s}getParticleUpdate(e){const t=er(e);return this._generateParticleUpdateCache[t]?this._generateParticleUpdateCache[t]:(this._generateParticleUpdateCache[t]=this.generateParticleUpdate(e),this._generateParticleUpdateCache[t])}generateParticleUpdate(e){return Jt(e)}update(e,t){e.length>this._size&&(t=!0,this._size=Math.max(e.length,this._size*1.5|0),this.staticAttributeBuffer=new Y(this._size*this._staticStride*4*4),this.dynamicAttributeBuffer=new Y(this._size*this._dynamicStride*4*4),this.indexBuffer=Pe(this._size),this.geometry.indexBuffer.setDataWithSize(this.indexBuffer,this.indexBuffer.byteLength,!0));const r=this.dynamicAttributeBuffer;if(this._dynamicUpload(e,r.float32View,r.uint32View),this._dynamicBuffer.setDataWithSize(this.dynamicAttributeBuffer.float32View,e.length*this._dynamicStride*4,!0),t){const n=this.staticAttributeBuffer;this._staticUpload(e,n.float32View,n.uint32View),this._staticBuffer.setDataWithSize(n.float32View,e.length*this._staticStride*4,!0)}}destroy(){this._staticBuffer.destroy(),this._dynamicBuffer.destroy(),this.geometry.destroy()}}function er(a){const e=[];for(const t in a){const r=a[t];e.push(t,r.code,r.dynamic?"d":"s")}return e.join("_")}var tr=`varying vec2 vUV;
varying vec4 vColor;

uniform sampler2D uTexture;

void main(void){
    vec4 color = texture2D(uTexture, vUV) * vColor;
    gl_FragColor = color;
}`,rr=`attribute vec2 aVertex;
attribute vec2 aUV;
attribute vec4 aColor;

attribute vec2 aPosition;
attribute float aRotation;

uniform mat3 uTranslationMatrix;
uniform float uRound;
uniform vec2 uResolution;
uniform vec4 uColor;

varying vec2 vUV;
varying vec4 vColor;

vec2 roundPixels(vec2 position, vec2 targetSize)
{       
    return (floor(((position * 0.5 + 0.5) * targetSize) + 0.5) / targetSize) * 2.0 - 1.0;
}

void main(void){
    float cosRotation = cos(aRotation);
    float sinRotation = sin(aRotation);
    float x = aVertex.x * cosRotation - aVertex.y * sinRotation;
    float y = aVertex.x * sinRotation + aVertex.y * cosRotation;

    vec2 v = vec2(x, y);
    v = v + aPosition;

    gl_Position = vec4((uTranslationMatrix * vec3(v, 1.0)).xy, 0.0, 1.0);

    if(uRound == 1.0)
    {
        gl_Position.xy = roundPixels(gl_Position.xy, uResolution);
    }

    vUV = aUV;
    vColor = vec4(aColor.rgb * aColor.a, aColor.a) * uColor;
}
`,Fe=`
struct ParticleUniforms {
  uProjectionMatrix:mat3x3<f32>,
  uColor:vec4<f32>,
  uResolution:vec2<f32>,
  uRoundPixels:f32,
};

@group(0) @binding(0) var<uniform> uniforms: ParticleUniforms;

@group(1) @binding(0) var uTexture: texture_2d<f32>;
@group(1) @binding(1) var uSampler : sampler;

struct VSOutput {
    @builtin(position) position: vec4<f32>,
    @location(0) uv : vec2<f32>,
    @location(1) color : vec4<f32>,
  };
@vertex
fn mainVertex(
  @location(0) aVertex: vec2<f32>,
  @location(1) aPosition: vec2<f32>,
  @location(2) aUV: vec2<f32>,
  @location(3) aColor: vec4<f32>,
  @location(4) aRotation: f32,
) -> VSOutput {
  
   let v = vec2(
       aVertex.x * cos(aRotation) - aVertex.y * sin(aRotation),
       aVertex.x * sin(aRotation) + aVertex.y * cos(aRotation)
   ) + aPosition;

   let position = vec4((uniforms.uProjectionMatrix * vec3(v, 1.0)).xy, 0.0, 1.0);

    let vColor = vec4(aColor.rgb * aColor.a, aColor.a) * uniforms.uColor;

  return VSOutput(
   position,
   aUV,
   vColor,
  );
}

@fragment
fn mainFragment(
  @location(0) uv: vec2<f32>,
  @location(1) color: vec4<f32>,
  @builtin(position) position: vec4<f32>,
) -> @location(0) vec4<f32> {

    var sample = textureSample(uTexture, uSampler, uv) * color;
   
    return sample;
}`;class nr extends fe{constructor(){const e=vt.from({vertex:rr,fragment:tr}),t=wt.from({fragment:{source:Fe,entryPoint:"mainFragment"},vertex:{source:Fe,entryPoint:"mainVertex"}});super({glProgram:e,gpuProgram:t,resources:{uTexture:F.WHITE.source,uSampler:new Ct({}),uniforms:{uTranslationMatrix:{value:new k,type:"mat3x3<f32>"},uColor:{value:new U(16777215),type:"vec4<f32>"},uRound:{value:1,type:"f32"},uResolution:{value:[0,0],type:"vec2<f32>"}}}})}}class nt{constructor(e,t){this.state=J.for2d(),this._gpuBufferHash=Object.create(null),this._destroyRenderableBound=this.destroyRenderable.bind(this),this.localUniforms=new $({uTranslationMatrix:{value:new k,type:"mat3x3<f32>"},uColor:{value:new Float32Array(4),type:"vec4<f32>"},uRound:{value:1,type:"f32"},uResolution:{value:[0,0],type:"vec2<f32>"}}),this.renderer=e,this.adaptor=t,this.defaultShader=new nr,this.state=J.for2d()}validateRenderable(e){return!1}addRenderable(e,t){this.renderer.renderPipes.batch.break(t),t.add(e)}getBuffers(e){return this._gpuBufferHash[e.uid]||this._initBuffer(e)}_initBuffer(e){return this._gpuBufferHash[e.uid]=new Zt({size:e.particleChildren.length,properties:e._properties}),e.on("destroyed",this._destroyRenderableBound),this._gpuBufferHash[e.uid]}updateRenderable(e){}destroyRenderable(e){this._gpuBufferHash[e.uid].destroy(),this._gpuBufferHash[e.uid]=null,e.off("destroyed",this._destroyRenderableBound)}execute(e){const t=e.particleChildren;if(t.length===0)return;const r=this.renderer,n=this.getBuffers(e);e.texture||(e.texture=t[0].texture);const i=this.state;n.update(t,e._childrenDirty),e._childrenDirty=!1,i.blendMode=he(e.blendMode,e.texture._source);const s=this.localUniforms.uniforms,o=s.uTranslationMatrix;e.worldTransform.copyTo(o),o.prepend(r.globalUniforms.globalUniformData.projectionMatrix),s.uResolution=r.globalUniforms.globalUniformData.resolution,s.uRound=r._roundPixels|e._roundPixels,te(e.groupColorAlpha,s.uColor,0),this.adaptor.execute(this,e)}destroy(){this.defaultShader&&(this.defaultShader.destroy(),this.defaultShader=null)}}class it extends nt{constructor(e){super(e,new qt)}}it.extension={type:[y.WebGLPipes],name:"particle"};class st extends nt{constructor(e){super(e,new Qt)}}st.extension={type:[y.WebGPUPipes],name:"particle"};class at{constructor(e){this._gpuSpriteHash=Object.create(null),this._destroyRenderableBound=this.destroyRenderable.bind(this),this._renderer=e,this._renderer.renderableGC.addManagedHash(this,"_gpuSpriteHash")}addRenderable(e,t){const r=this._getGpuSprite(e);e.didViewUpdate&&this._updateBatchableSprite(e,r),this._renderer.renderPipes.batch.addToBatch(r,t)}updateRenderable(e){const t=this._gpuSpriteHash[e.uid];e.didViewUpdate&&this._updateBatchableSprite(e,t),t._batcher.updateElement(t)}validateRenderable(e){const t=this._getGpuSprite(e);return!t._batcher.checkAndUpdateTexture(t,e._texture)}destroyRenderable(e){const t=this._gpuSpriteHash[e.uid];w.return(t.geometry),w.return(t),this._gpuSpriteHash[e.uid]=null,e.off("destroyed",this._destroyRenderableBound)}_updateBatchableSprite(e,t){t.geometry.update(e),t.setTexture(e._texture)}_getGpuSprite(e){return this._gpuSpriteHash[e.uid]||this._initGPUSprite(e)}_initGPUSprite(e){const t=w.get(ge);return t.geometry=w.get(Bt),t.renderable=e,t.transform=e.groupTransform,t.texture=e._texture,t.roundPixels=this._renderer._roundPixels|e._roundPixels,this._gpuSpriteHash[e.uid]=t,e.didViewUpdate||this._updateBatchableSprite(e,t),e.on("destroyed",this._destroyRenderableBound),t}destroy(){for(const e in this._gpuSpriteHash)this._gpuSpriteHash[e].geometry.destroy();this._gpuSpriteHash=null,this._renderer=null}}at.extension={type:[y.WebGLPipes,y.WebGPUPipes,y.CanvasPipes],name:"nineSliceSprite"};const ir={name:"tiling-bit",vertex:{header:`
            struct TilingUniforms {
                uMapCoord:mat3x3<f32>,
                uClampFrame:vec4<f32>,
                uClampOffset:vec2<f32>,
                uTextureTransform:mat3x3<f32>,
                uSizeAnchor:vec4<f32>
            };

            @group(2) @binding(0) var<uniform> tilingUniforms: TilingUniforms;
            @group(2) @binding(1) var uTexture: texture_2d<f32>;
            @group(2) @binding(2) var uSampler: sampler;
        `,main:`
            uv = (tilingUniforms.uTextureTransform * vec3(uv, 1.0)).xy;

            position = (position - tilingUniforms.uSizeAnchor.zw) * tilingUniforms.uSizeAnchor.xy;
        `},fragment:{header:`
            struct TilingUniforms {
                uMapCoord:mat3x3<f32>,
                uClampFrame:vec4<f32>,
                uClampOffset:vec2<f32>,
                uTextureTransform:mat3x3<f32>,
                uSizeAnchor:vec4<f32>
            };

            @group(2) @binding(0) var<uniform> tilingUniforms: TilingUniforms;
            @group(2) @binding(1) var uTexture: texture_2d<f32>;
            @group(2) @binding(2) var uSampler: sampler;
        `,main:`

            var coord = vUV + ceil(tilingUniforms.uClampOffset - vUV);
            coord = (tilingUniforms.uMapCoord * vec3(coord, 1.0)).xy;
            var unclamped = coord;
            coord = clamp(coord, tilingUniforms.uClampFrame.xy, tilingUniforms.uClampFrame.zw);

            var bias = 0.;

            if(unclamped.x == coord.x && unclamped.y == coord.y)
            {
                bias = -32.;
            } 

            outColor = textureSampleBias(uTexture, uSampler, coord, bias);
        `}},sr={name:"tiling-bit",vertex:{header:`
            uniform mat3 uTextureTransform;
            uniform vec4 uSizeAnchor;
        
        `,main:`
            uv = (uTextureTransform * vec3(aUV, 1.0)).xy;

            position = (position - uSizeAnchor.zw) * uSizeAnchor.xy;
        `},fragment:{header:`
            uniform sampler2D uTexture;
            uniform mat3 uMapCoord;
            uniform vec4 uClampFrame;
            uniform vec2 uClampOffset;
        `,main:`

        vec2 coord = vUV + ceil(uClampOffset - vUV);
        coord = (uMapCoord * vec3(coord, 1.0)).xy;
        vec2 unclamped = coord;
        coord = clamp(coord, uClampFrame.xy, uClampFrame.zw);
        
        outColor = texture(uTexture, coord, unclamped == coord ? 0.0 : -32.0);// lod-bias very negative to force lod 0
    
        `}};let ie,se;class ar extends fe{constructor(){ie??(ie=Le({name:"tiling-sprite-shader",bits:[Wt,ir,Ie]})),se??(se=De({name:"tiling-sprite-shader",bits:[Ht,sr,Oe]}));const e=new $({uMapCoord:{value:new k,type:"mat3x3<f32>"},uClampFrame:{value:new Float32Array([0,0,1,1]),type:"vec4<f32>"},uClampOffset:{value:new Float32Array([0,0]),type:"vec2<f32>"},uTextureTransform:{value:new k,type:"mat3x3<f32>"},uSizeAnchor:{value:new Float32Array([100,100,.5,.5]),type:"vec4<f32>"}});super({glProgram:se,gpuProgram:ie,resources:{localUniforms:new $({uTransformMatrix:{value:new k,type:"mat3x3<f32>"},uColor:{value:new Float32Array([1,1,1,1]),type:"vec4<f32>"},uRound:{value:0,type:"f32"}}),tilingUniforms:e,uTexture:F.EMPTY.source,uSampler:F.EMPTY.source.style}})}updateUniforms(e,t,r,n,i,s){const o=this.resources.tilingUniforms,l=s.width,d=s.height,c=s.textureMatrix,u=o.uniforms.uTextureTransform;u.set(r.a*l/e,r.b*l/t,r.c*d/e,r.d*d/t,r.tx/e,r.ty/t),u.invert(),o.uniforms.uMapCoord=c.mapCoord,o.uniforms.uClampFrame=c.uClampFrame,o.uniforms.uClampOffset=c.uClampOffset,o.uniforms.uTextureTransform=u,o.uniforms.uSizeAnchor[0]=e,o.uniforms.uSizeAnchor[1]=t,o.uniforms.uSizeAnchor[2]=n,o.uniforms.uSizeAnchor[3]=i,s&&(this.resources.uTexture=s.source,this.resources.uSampler=s.source.style)}}class or extends Ee{constructor(){super({positions:new Float32Array([0,0,1,0,1,1,0,1]),uvs:new Float32Array([0,0,1,0,1,1,0,1]),indices:new Uint32Array([0,1,2,0,2,3])})}}function lr(a,e){const t=a.anchor.x,r=a.anchor.y;e[0]=-t*a.width,e[1]=-r*a.height,e[2]=(1-t)*a.width,e[3]=-r*a.height,e[4]=(1-t)*a.width,e[5]=(1-r)*a.height,e[6]=-t*a.width,e[7]=(1-r)*a.height}function dr(a,e,t,r){let n=0;const i=a.length/e,s=r.a,o=r.b,l=r.c,d=r.d,c=r.tx,u=r.ty;for(t*=e;n<i;){const f=a[t],m=a[t+1];a[t]=s*f+l*m+c,a[t+1]=o*f+d*m+u,t+=e,n++}}function cr(a,e){const t=a.texture,r=t.frame.width,n=t.frame.height;let i=0,s=0;a.applyAnchorToTexture&&(i=a.anchor.x,s=a.anchor.y),e[0]=e[6]=-i,e[2]=e[4]=1-i,e[1]=e[3]=-s,e[5]=e[7]=1-s;const o=k.shared;o.copyFrom(a._tileTransform.matrix),o.tx/=a.width,o.ty/=a.height,o.invert(),o.scale(a.width/r,a.height/n),dr(e,2,0,o)}const q=new or;class ot{constructor(e){this._state=J.default2d,this._tilingSpriteDataHash=Object.create(null),this._destroyRenderableBound=this.destroyRenderable.bind(this),this._renderer=e,this._renderer.renderableGC.addManagedHash(this,"_tilingSpriteDataHash")}validateRenderable(e){const t=this._getTilingSpriteData(e),r=t.canBatch;this._updateCanBatch(e);const n=t.canBatch;if(n&&n===r){const{batchableMesh:i}=t;return!i._batcher.checkAndUpdateTexture(i,e.texture)}return r!==n}addRenderable(e,t){const r=this._renderer.renderPipes.batch;this._updateCanBatch(e);const n=this._getTilingSpriteData(e),{geometry:i,canBatch:s}=n;if(s){n.batchableMesh||(n.batchableMesh=new ge);const o=n.batchableMesh;e.didViewUpdate&&(this._updateBatchableMesh(e),o.geometry=i,o.renderable=e,o.transform=e.groupTransform,o.setTexture(e._texture)),o.roundPixels=this._renderer._roundPixels|e._roundPixels,r.addToBatch(o,t)}else r.break(t),n.shader||(n.shader=new ar),this.updateRenderable(e),t.add(e)}execute(e){const{shader:t}=this._tilingSpriteDataHash[e.uid];t.groups[0]=this._renderer.globalUniforms.bindGroup;const r=t.resources.localUniforms.uniforms;r.uTransformMatrix=e.groupTransform,r.uRound=this._renderer._roundPixels|e._roundPixels,te(e.groupColorAlpha,r.uColor,0),this._state.blendMode=he(e.groupBlendMode,e.texture._source),this._renderer.encoder.draw({geometry:q,shader:t,state:this._state})}updateRenderable(e){const t=this._getTilingSpriteData(e),{canBatch:r}=t;if(r){const{batchableMesh:n}=t;e.didViewUpdate&&this._updateBatchableMesh(e),n._batcher.updateElement(n)}else if(e.didViewUpdate){const{shader:n}=t;n.updateUniforms(e.width,e.height,e._tileTransform.matrix,e.anchor.x,e.anchor.y,e.texture)}}destroyRenderable(e){var r;const t=this._getTilingSpriteData(e);t.batchableMesh=null,(r=t.shader)==null||r.destroy(),this._tilingSpriteDataHash[e.uid]=null,e.off("destroyed",this._destroyRenderableBound)}_getTilingSpriteData(e){return this._tilingSpriteDataHash[e.uid]||this._initTilingSpriteData(e)}_initTilingSpriteData(e){const t=new Ee({indices:q.indices,positions:q.positions.slice(),uvs:q.uvs.slice()});return this._tilingSpriteDataHash[e.uid]={canBatch:!0,renderable:e,geometry:t},e.on("destroyed",this._destroyRenderableBound),this._tilingSpriteDataHash[e.uid]}_updateBatchableMesh(e){const t=this._getTilingSpriteData(e),{geometry:r}=t,n=e.texture.source.style;n.addressMode!=="repeat"&&(n.addressMode="repeat",n.update()),cr(e,r.uvs),lr(e,r.positions)}destroy(){for(const e in this._tilingSpriteDataHash)this.destroyRenderable(this._tilingSpriteDataHash[e].renderable);this._tilingSpriteDataHash=null,this._renderer=null}_updateCanBatch(e){const t=this._getTilingSpriteData(e),r=e.texture;let n=!0;return this._renderer.type===ue.WEBGL&&(n=this._renderer.context.supports.nonPowOf2wrapping),t.canBatch=r.textureMatrix.isSimple&&(n||r.source.isPowerOfTwo),t.canBatch}}ot.extension={type:[y.WebGLPipes,y.WebGPUPipes,y.CanvasPipes],name:"tilingSprite"};const ur={name:"local-uniform-msdf-bit",vertex:{header:`
            struct LocalUniforms {
                uColor:vec4<f32>,
                uTransformMatrix:mat3x3<f32>,
                uDistance: f32,
                uRound:f32,
            }

            @group(2) @binding(0) var<uniform> localUniforms : LocalUniforms;
        `,main:`
            vColor *= localUniforms.uColor;
            modelMatrix *= localUniforms.uTransformMatrix;
        `,end:`
            if(localUniforms.uRound == 1)
            {
                vPosition = vec4(roundPixels(vPosition.xy, globalUniforms.uResolution), vPosition.zw);
            }
        `},fragment:{header:`
            struct LocalUniforms {
                uColor:vec4<f32>,
                uTransformMatrix:mat3x3<f32>,
                uDistance: f32
            }

            @group(2) @binding(0) var<uniform> localUniforms : LocalUniforms;
         `,main:` 
            outColor = vec4<f32>(calculateMSDFAlpha(outColor, localUniforms.uColor, localUniforms.uDistance));
        `}},hr={name:"local-uniform-msdf-bit",vertex:{header:`
            uniform mat3 uTransformMatrix;
            uniform vec4 uColor;
            uniform float uRound;
        `,main:`
            vColor *= uColor;
            modelMatrix *= uTransformMatrix;
        `,end:`
            if(uRound == 1.)
            {
                gl_Position.xy = roundPixels(gl_Position.xy, uResolution);
            }
        `},fragment:{header:`
            uniform float uDistance;
         `,main:` 
            outColor = vec4(calculateMSDFAlpha(outColor, vColor, uDistance));
        `}},fr={name:"msdf-bit",fragment:{header:`
            fn calculateMSDFAlpha(msdfColor:vec4<f32>, shapeColor:vec4<f32>, distance:f32) -> f32 {
                
                // MSDF
                var median = msdfColor.r + msdfColor.g + msdfColor.b -
                    min(msdfColor.r, min(msdfColor.g, msdfColor.b)) -
                    max(msdfColor.r, max(msdfColor.g, msdfColor.b));
            
                // SDF
                median = min(median, msdfColor.a);

                var screenPxDistance = distance * (median - 0.5);
                var alpha = clamp(screenPxDistance + 0.5, 0.0, 1.0);
                if (median < 0.01) {
                    alpha = 0.0;
                } else if (median > 0.99) {
                    alpha = 1.0;
                }

                // Gamma correction for coverage-like alpha
                var luma: f32 = dot(shapeColor.rgb, vec3<f32>(0.299, 0.587, 0.114));
                var gamma: f32 = mix(1.0, 1.0 / 2.2, luma);
                var coverage: f32 = pow(shapeColor.a * alpha, gamma);

                return coverage;
             
            }
        `}},pr={name:"msdf-bit",fragment:{header:`
            float calculateMSDFAlpha(vec4 msdfColor, vec4 shapeColor, float distance) {
                
                // MSDF
                float median = msdfColor.r + msdfColor.g + msdfColor.b -
                                min(msdfColor.r, min(msdfColor.g, msdfColor.b)) -
                                max(msdfColor.r, max(msdfColor.g, msdfColor.b));
               
                // SDF
                median = min(median, msdfColor.a);
            
                float screenPxDistance = distance * (median - 0.5);
                float alpha = clamp(screenPxDistance + 0.5, 0.0, 1.0);
           
                if (median < 0.01) {
                    alpha = 0.0;
                } else if (median > 0.99) {
                    alpha = 1.0;
                }

                // Gamma correction for coverage-like alpha
                float luma = dot(shapeColor.rgb, vec3(0.299, 0.587, 0.114));
                float gamma = mix(1.0, 1.0 / 2.2, luma);
                float coverage = pow(shapeColor.a * alpha, gamma);  
              
                return coverage;
            }
        `}};let ae,oe;class gr extends fe{constructor(){const e=new $({uColor:{value:new Float32Array([1,1,1,1]),type:"vec4<f32>"},uTransformMatrix:{value:new k,type:"mat3x3<f32>"},uDistance:{value:4,type:"f32"},uRound:{value:0,type:"f32"}}),t=Rt();ae??(ae=Le({name:"sdf-shader",bits:[Pt,Mt(t),ur,fr,Ie]})),oe??(oe=De({name:"sdf-shader",bits:[Ft,Ut(t),hr,pr,Oe]})),super({glProgram:oe,gpuProgram:ae,resources:{localUniforms:e,batchSamplers:kt(t)}})}}class lt{constructor(e){this._gpuBitmapText={},this._destroyRenderableBound=this.destroyRenderable.bind(this),this._renderer=e,this._renderer.renderableGC.addManagedHash(this,"_gpuBitmapText")}validateRenderable(e){const t=this._getGpuBitmapText(e);return e._didTextUpdate&&(e._didTextUpdate=!1,this._updateContext(e,t)),this._renderer.renderPipes.graphics.validateRenderable(t)}addRenderable(e,t){const r=this._getGpuBitmapText(e);Ue(e,r),e._didTextUpdate&&(e._didTextUpdate=!1,this._updateContext(e,r)),this._renderer.renderPipes.graphics.addRenderable(r,t),r.context.customShader&&this._updateDistanceField(e)}destroyRenderable(e){e.off("destroyed",this._destroyRenderableBound),this._destroyRenderableByUid(e.uid)}_destroyRenderableByUid(e){const t=this._gpuBitmapText[e].context;t.customShader&&(w.return(t.customShader),t.customShader=null),w.return(this._gpuBitmapText[e]),this._gpuBitmapText[e]=null}updateRenderable(e){const t=this._getGpuBitmapText(e);Ue(e,t),this._renderer.renderPipes.graphics.updateRenderable(t),t.context.customShader&&this._updateDistanceField(e)}_updateContext(e,t){const{context:r}=t,n=$t.getFont(e.text,e._style);r.clear(),n.distanceField.type!=="none"&&(r.customShader||(r.customShader=w.get(gr)));const i=Array.from(e.text),s=e._style;let o=n.baseLineOffset;const l=Xe(i,s,n,!0);let d=0;const c=s.padding,u=l.scale;let f=l.width,m=l.height+l.offsetY;s._stroke&&(f+=s._stroke.width/u,m+=s._stroke.width/u),r.translate(-e._anchor._x*f-c,-e._anchor._y*m-c).scale(u,u);const p=n.applyFillAsTint?s._fill.color:16777215;for(let h=0;h<l.lines.length;h++){const _=l.lines[h];for(let x=0;x<_.charPositions.length;x++){const S=i[d++],b=n.chars[S];b!=null&&b.texture&&r.texture(b.texture,p||"black",Math.round(_.charPositions[x]+b.xOffset),Math.round(o+b.yOffset))}o+=n.lineHeight}}_getGpuBitmapText(e){return this._gpuBitmapText[e.uid]||this.initGpuText(e)}initGpuText(e){const t=w.get(At);return this._gpuBitmapText[e.uid]=t,this._updateContext(e,t),e.on("destroyed",this._destroyRenderableBound),this._gpuBitmapText[e.uid]}_updateDistanceField(e){const t=this._getGpuBitmapText(e).context,r=e._style.fontFamily,n=z.get(`${r}-bitmap`),{a:i,b:s,c:o,d:l}=e.groupTransform,d=Math.sqrt(i*i+s*s),c=Math.sqrt(o*o+l*l),u=(Math.abs(d)+Math.abs(c))/2,f=n.baseRenderedFontSize/e._style.fontSize,m=u*n.distanceField.range*(1/f);t.customShader.resources.localUniforms.uniforms.uDistance=m}destroy(){for(const e in this._gpuBitmapText)this._destroyRenderableByUid(e);this._gpuBitmapText=null,this._renderer=null}}lt.extension={type:[y.WebGLPipes,y.WebGPUPipes,y.CanvasPipes],name:"bitmapText"};function Ue(a,e){e.groupTransform=a.groupTransform,e.groupColorAlpha=a.groupColorAlpha,e.groupColor=a.groupColor,e.groupBlendMode=a.groupBlendMode,e.globalDisplayStatus=a.globalDisplayStatus,e.groupTransform=a.groupTransform,e.localDisplayStatus=a.localDisplayStatus,e.groupAlpha=a.groupAlpha,e._roundPixels=a._roundPixels}function ce(a,e){const{texture:t,bounds:r}=a;zt(r,e._anchor,t);const n=e._style.padding;r.minX-=n,r.minY-=n,r.maxX-=n,r.maxY-=n}class dt{constructor(e){this._gpuText=Object.create(null),this._destroyRenderableBound=this.destroyRenderable.bind(this),this._renderer=e,this._renderer.runners.resolutionChange.add(this),this._renderer.renderableGC.addManagedHash(this,"_gpuText")}resolutionChange(){for(const e in this._gpuText){const t=this._gpuText[e];if(!t)continue;const r=t.batchableSprite.renderable;r._autoResolution&&(r._resolution=this._renderer.resolution,r.onViewUpdate())}}validateRenderable(e){const t=this._getGpuText(e),r=e._getKey();return t.textureNeedsUploading?(t.textureNeedsUploading=!1,!0):t.currentKey!==r}addRenderable(e,t){const n=this._getGpuText(e).batchableSprite;e._didTextUpdate&&this._updateText(e),this._renderer.renderPipes.batch.addToBatch(n,t)}updateRenderable(e){const r=this._getGpuText(e).batchableSprite;e._didTextUpdate&&this._updateText(e),r._batcher.updateElement(r)}destroyRenderable(e){e.off("destroyed",this._destroyRenderableBound),this._destroyRenderableById(e.uid)}_destroyRenderableById(e){const t=this._gpuText[e];this._renderer.htmlText.decreaseReferenceCount(t.currentKey),w.return(t.batchableSprite),this._gpuText[e]=null}_updateText(e){const t=e._getKey(),r=this._getGpuText(e),n=r.batchableSprite;r.currentKey!==t&&this._updateGpuText(e).catch(i=>{console.error(i)}),e._didTextUpdate=!1,ce(n,e)}async _updateGpuText(e){e._didTextUpdate=!1;const t=this._getGpuText(e);if(t.generatingTexture)return;const r=e._getKey();this._renderer.htmlText.decreaseReferenceCount(t.currentKey),t.generatingTexture=!0,t.currentKey=r;const n=e.resolution??this._renderer.resolution,i=await this._renderer.htmlText.getManagedTexture(e.text,n,e._style,e._getKey()),s=t.batchableSprite;s.texture=t.texture=i,t.generatingTexture=!1,t.textureNeedsUploading=!0,e.onViewUpdate(),ce(s,e)}_getGpuText(e){return this._gpuText[e.uid]||this.initGpuText(e)}initGpuText(e){const t={texture:F.EMPTY,currentKey:"--",batchableSprite:w.get(Ve),textureNeedsUploading:!1,generatingTexture:!1},r=t.batchableSprite;return r.renderable=e,r.transform=e.groupTransform,r.texture=F.EMPTY,r.bounds={minX:0,maxX:1,minY:0,maxY:0},r.roundPixels=this._renderer._roundPixels|e._roundPixels,e._resolution=e._autoResolution?this._renderer.resolution:e.resolution,this._gpuText[e.uid]=t,e.on("destroyed",this._destroyRenderableBound),t}destroy(){for(const e in this._gpuText)this._destroyRenderableById(e);this._gpuText=null,this._renderer=null}}dt.extension={type:[y.WebGLPipes,y.WebGPUPipes,y.CanvasPipes],name:"htmlText"};function mr(){const{userAgent:a}=j.get().getNavigator();return/^((?!chrome|android).)*safari/i.test(a)}const xr=new He;function ct(a,e,t,r){const n=xr;n.minX=0,n.minY=0,n.maxX=a.width/r|0,n.maxY=a.height/r|0;const i=G.getOptimalTexture(n.width,n.height,r,!1);return i.source.uploadMethodId="image",i.source.resource=a,i.source.alphaMode="premultiply-alpha-on-upload",i.frame.width=e/r,i.frame.height=t/r,i.source.emit("update",i.source),i.updateUvs(),i}function _r(a,e){const t=e.fontFamily,r=[],n={},i=/font-family:([^;"\s]+)/g,s=a.match(i);function o(l){n[l]||(r.push(l),n[l]=!0)}if(Array.isArray(t))for(let l=0;l<t.length;l++)o(t[l]);else o(t);s&&s.forEach(l=>{const d=l.split(":")[1].trim();o(d)});for(const l in e.tagStyles){const d=e.tagStyles[l].fontFamily;o(d)}return r}async function br(a){const t=await(await j.get().fetch(a)).blob(),r=new FileReader;return await new Promise((i,s)=>{r.onloadend=()=>i(r.result),r.onerror=s,r.readAsDataURL(t)})}async function ke(a,e){const t=await br(e);return`@font-face {
        font-family: "${a.fontFamily}";
        src: url('${t}');
        font-weight: ${a.fontWeight};
        font-style: ${a.fontStyle};
    }`}const Q=new Map;async function yr(a,e,t){const r=a.filter(n=>z.has(`${n}-and-url`)).map((n,i)=>{if(!Q.has(n)){const{url:s}=z.get(`${n}-and-url`);i===0?Q.set(n,ke({fontWeight:e.fontWeight,fontStyle:e.fontStyle,fontFamily:n},s)):Q.set(n,ke({fontWeight:t.fontWeight,fontStyle:t.fontStyle,fontFamily:n},s))}return Q.get(n)});return(await Promise.all(r)).join(`
`)}function Tr(a,e,t,r,n){const{domElement:i,styleElement:s,svgRoot:o}=n;i.innerHTML=`<style>${e.cssStyle}</style><div style='padding:0;'>${a}</div>`,i.setAttribute("style",`transform: scale(${t});transform-origin: top left; display: inline-block`),s.textContent=r;const{width:l,height:d}=n.image;return o.setAttribute("width",l.toString()),o.setAttribute("height",d.toString()),new XMLSerializer().serializeToString(o)}function Sr(a,e){const t=O.getOptimalCanvasAndContext(a.width,a.height,e),{context:r}=t;return r.clearRect(0,0,a.width,a.height),r.drawImage(a,0,0),t}function vr(a,e,t){return new Promise(async r=>{t&&await new Promise(n=>setTimeout(n,100)),a.onload=()=>{r()},a.src=`data:image/svg+xml;charset=utf8,${encodeURIComponent(e)}`,a.crossOrigin="anonymous"})}class me{constructor(e){this._activeTextures={},this._renderer=e,this._createCanvas=e.type===ue.WEBGPU}getTexture(e){return this._buildTexturePromise(e.text,e.resolution,e.style)}getManagedTexture(e,t,r,n){if(this._activeTextures[n])return this._increaseReferenceCount(n),this._activeTextures[n].promise;const i=this._buildTexturePromise(e,t,r).then(s=>(this._activeTextures[n].texture=s,s));return this._activeTextures[n]={texture:null,promise:i,usageCount:1},i}async _buildTexturePromise(e,t,r){const n=w.get(et),i=_r(e,r),s=await yr(i,r,pe.defaultTextStyle),o=Xt(e,r,s,n),l=Math.ceil(Math.ceil(Math.max(1,o.width)+r.padding*2)*t),d=Math.ceil(Math.ceil(Math.max(1,o.height)+r.padding*2)*t),c=n.image,u=2;c.width=(l|0)+u,c.height=(d|0)+u;const f=Tr(e,r,t,s,n);await vr(c,f,mr()&&i.length>0);const m=c;let p;this._createCanvas&&(p=Sr(c,t));const h=ct(p?p.canvas:m,c.width-u,c.height-u,t);return this._createCanvas&&(this._renderer.texture.initSource(h.source),O.returnCanvasAndContext(p)),w.return(n),h}_increaseReferenceCount(e){this._activeTextures[e].usageCount++}decreaseReferenceCount(e){const t=this._activeTextures[e];t&&(t.usageCount--,t.usageCount===0&&(t.texture?this._cleanUp(t):t.promise.then(r=>{t.texture=r,this._cleanUp(t)}).catch(()=>{E("HTMLTextSystem: Failed to clean texture")}),this._activeTextures[e]=null))}_cleanUp(e){G.returnTexture(e.texture),e.texture.source.resource=null,e.texture.source.uploadMethodId="unknown"}getReferenceCount(e){return this._activeTextures[e].usageCount}destroy(){this._activeTextures=null}}me.extension={type:[y.WebGLSystem,y.WebGPUSystem,y.CanvasSystem],name:"htmlText"};me.defaultFontOptions={fontFamily:"Arial",fontStyle:"normal",fontWeight:"normal"};class ut{constructor(e){this._gpuText=Object.create(null),this._destroyRenderableBound=this.destroyRenderable.bind(this),this._renderer=e,this._renderer.runners.resolutionChange.add(this),this._renderer.renderableGC.addManagedHash(this,"_gpuText")}resolutionChange(){for(const e in this._gpuText){const t=this._gpuText[e];if(!t)continue;const r=t.batchableSprite.renderable;r._autoResolution&&(r._resolution=this._renderer.resolution,r.onViewUpdate())}}validateRenderable(e){const t=this._getGpuText(e),r=e._getKey();return t.currentKey!==r}addRenderable(e,t){const n=this._getGpuText(e).batchableSprite;e._didTextUpdate&&this._updateText(e),this._renderer.renderPipes.batch.addToBatch(n,t)}updateRenderable(e){const r=this._getGpuText(e).batchableSprite;e._didTextUpdate&&this._updateText(e),r._batcher.updateElement(r)}destroyRenderable(e){e.off("destroyed",this._destroyRenderableBound),this._destroyRenderableById(e.uid)}_destroyRenderableById(e){const t=this._gpuText[e];this._renderer.canvasText.decreaseReferenceCount(t.currentKey),w.return(t.batchableSprite),this._gpuText[e]=null}_updateText(e){const t=e._getKey(),r=this._getGpuText(e),n=r.batchableSprite;r.currentKey!==t&&this._updateGpuText(e),e._didTextUpdate=!1,ce(n,e)}_updateGpuText(e){const t=this._getGpuText(e),r=t.batchableSprite;t.texture&&this._renderer.canvasText.decreaseReferenceCount(t.currentKey),t.texture=r.texture=this._renderer.canvasText.getManagedTexture(e),t.currentKey=e._getKey(),r.texture=t.texture}_getGpuText(e){return this._gpuText[e.uid]||this.initGpuText(e)}initGpuText(e){const t={texture:null,currentKey:"--",batchableSprite:w.get(Ve)};return t.batchableSprite.renderable=e,t.batchableSprite.transform=e.groupTransform,t.batchableSprite.bounds={minX:0,maxX:1,minY:0,maxY:0},t.batchableSprite.roundPixels=this._renderer._roundPixels|e._roundPixels,this._gpuText[e.uid]=t,e._resolution=e._autoResolution?this._renderer.resolution:e.resolution,this._updateText(e),e.on("destroyed",this._destroyRenderableBound),t}destroy(){for(const e in this._gpuText)this._destroyRenderableById(e);this._gpuText=null,this._renderer=null}}ut.extension={type:[y.WebGLPipes,y.WebGPUPipes,y.CanvasPipes],name:"text"};function Ae(a,e,t){for(let r=0,n=4*t*e;r<e;++r,n+=4)if(a[n+3]!==0)return!1;return!0}function ze(a,e,t,r,n){const i=4*e;for(let s=r,o=r*i+4*t;s<=n;++s,o+=i)if(a[o+3]!==0)return!1;return!0}function wr(a,e=1){const{width:t,height:r}=a,n=a.getContext("2d",{willReadFrequently:!0});if(n===null)throw new TypeError("Failed to get canvas 2D context");const s=n.getImageData(0,0,t,r).data;let o=0,l=0,d=t-1,c=r-1;for(;l<r&&Ae(s,t,l);)++l;if(l===r)return le.EMPTY;for(;Ae(s,t,c);)--c;for(;ze(s,t,o,l,c);)++o;for(;ze(s,t,d,l,c);)--d;return++d,++c,new le(o/e,l/e,(d-o)/e,(c-l)/e)}class ht{constructor(e){this._activeTextures={},this._renderer=e}getTextureSize(e,t,r){const n=L.measureText(e||" ",r);let i=Math.ceil(Math.ceil(Math.max(1,n.width)+r.padding*2)*t),s=Math.ceil(Math.ceil(Math.max(1,n.height)+r.padding*2)*t);return i=Math.ceil(i-1e-6),s=Math.ceil(s-1e-6),i=ye(i),s=ye(s),{width:i,height:s}}getTexture(e,t,r,n){typeof e=="string"&&(I("8.0.0","CanvasTextSystem.getTexture: Use object TextOptions instead of separate arguments"),e={text:e,style:r,resolution:t}),e.style instanceof V||(e.style=new V(e.style));const{texture:i,canvasAndContext:s}=this.createTextureAndCanvas(e);return this._renderer.texture.initSource(i._source),O.returnCanvasAndContext(s),i}createTextureAndCanvas(e){const{text:t,style:r}=e,n=e.resolution??this._renderer.resolution,i=L.measureText(t||" ",r),s=Math.ceil(Math.ceil(Math.max(1,i.width)+r.padding*2)*n),o=Math.ceil(Math.ceil(Math.max(1,i.height)+r.padding*2)*n),l=O.getOptimalCanvasAndContext(s,o),{canvas:d}=l;this.renderTextToCanvas(t,r,n,l);const c=ct(d,s,o,n);if(r.trim){const u=wr(d,n);c.frame.copyFrom(u),c.updateUvs()}return{texture:c,canvasAndContext:l}}getManagedTexture(e){e._resolution=e._autoResolution?this._renderer.resolution:e.resolution;const t=e._getKey();if(this._activeTextures[t])return this._increaseReferenceCount(t),this._activeTextures[t].texture;const{texture:r,canvasAndContext:n}=this.createTextureAndCanvas(e);return this._activeTextures[t]={canvasAndContext:n,texture:r,usageCount:1},r}_increaseReferenceCount(e){this._activeTextures[e].usageCount++}returnTexture(e){const t=e.source;t.resource=null,t.uploadMethodId="unknown",t.alphaMode="no-premultiply-alpha",G.returnTexture(e)}decreaseReferenceCount(e){const t=this._activeTextures[e];t.usageCount--,t.usageCount===0&&(O.returnCanvasAndContext(t.canvasAndContext),this.returnTexture(t.texture),this._activeTextures[e]=null)}getReferenceCount(e){return this._activeTextures[e].usageCount}renderTextToCanvas(e,t,r,n){var S,b,T,C;const{canvas:i,context:s}=n,o=Z(t),l=L.measureText(e||" ",t),d=l.lines,c=l.lineHeight,u=l.lineWidths,f=l.maxLineWidth,m=l.fontProperties,p=i.height;if(s.resetTransform(),s.scale(r,r),s.textBaseline=t.textBaseline,(S=t._stroke)!=null&&S.width){const B=t._stroke;s.lineWidth=B.width,s.miterLimit=B.miterLimit,s.lineJoin=B.join,s.lineCap=B.cap}s.font=o;let h,_;const x=t.dropShadow?2:1;for(let B=0;B<x;++B){const P=t.dropShadow&&B===0,M=P?Math.ceil(Math.max(1,p)+t.padding*2):0,W=M*r;if(P){s.fillStyle="black",s.strokeStyle="black";const v=t.dropShadow,re=v.color,ft=v.alpha;s.shadowColor=U.shared.setValue(re).setAlpha(ft).toRgbaString();const pt=v.blur*r,xe=v.distance*r;s.shadowBlur=pt,s.shadowOffsetX=Math.cos(v.angle)*xe,s.shadowOffsetY=Math.sin(v.angle)*xe+W}else{if(s.fillStyle=t._fill?ee(t._fill,s,l):null,(b=t._stroke)!=null&&b.width){const v=t._stroke.width*t._stroke.alignment;s.strokeStyle=ee(t._stroke,s,l,v)}s.shadowColor="black"}let K=(c-m.fontSize)/2;c-m.fontSize<0&&(K=0);const H=((T=t._stroke)==null?void 0:T.width)??0;for(let v=0;v<d.length;v++)h=H/2,_=H/2+v*c+m.ascent+K,t.align==="right"?h+=f-u[v]:t.align==="center"&&(h+=(f-u[v])/2),(C=t._stroke)!=null&&C.width&&this._drawLetterSpacing(d[v],t,n,h+t.padding,_+t.padding-M,!0),t._fill!==void 0&&this._drawLetterSpacing(d[v],t,n,h+t.padding,_+t.padding-M)}}_drawLetterSpacing(e,t,r,n,i,s=!1){const{context:o}=r,l=t.letterSpacing;let d=!1;if(L.experimentalLetterSpacingSupported&&(L.experimentalLetterSpacing?(o.letterSpacing=`${l}px`,o.textLetterSpacing=`${l}px`,d=!0):(o.letterSpacing="0px",o.textLetterSpacing="0px")),l===0||d){s?o.strokeText(e,n,i):o.fillText(e,n,i);return}let c=n;const u=L.graphemeSegmenter(e);let f=o.measureText(e).width,m=0;for(let p=0;p<u.length;++p){const h=u[p];s?o.strokeText(h,c,i):o.fillText(h,c,i);let _="";for(let x=p+1;x<u.length;++x)_+=u[x];m=o.measureText(_).width,c+=f-m+l,f=m}}destroy(){this._activeTextures=null}}ht.extension={type:[y.WebGLSystem,y.WebGPUSystem,y.CanvasSystem],name:"canvasText"};R.add($e);R.add(je);R.add(tt);R.add(Gt);R.add(rt);R.add(it);R.add(st);R.add(ht);R.add(ut);R.add(lt);R.add(me);R.add(dt);R.add(ot);R.add(at);R.add(Qe);R.add(qe);
